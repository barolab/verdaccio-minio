#!/bin/bash

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
PWD=$(pwd)
RED=$(tput -Txterm setaf 1)
GREEN=$(tput -Txterm setaf 2)
UNDERLINE="$(tput smul)"
NORMAL="$(tput sgr0)"
BOLD="$(tput bold)"

MINIO_SERVICE=minio
MINIO_ENDPOINT=http://127.0.0.1:9000
MINIO_ACCESS_KEY=this-is-not-so-secret
MINIO_SECRET_KEY=this-is-not-so-secret
VERDACCIO_SERVICE=verdaccio
VERDACCIO_VERSION=4.5
VERDACCIO_ENDPOINT=http://127.0.0.1:4873
COMPOSE_FILE="docker-compose-${VERDACCIO_VERSION}.yaml"

root() {
  cd "$DIR/.."
}

example() {
  cd "$DIR/../example"
}

title() {
  echo "${UNDERLINE}${BOLD}${1}${NORMAL}"
}

success() {
  echo "${GREEN}✓${NORMAL} ${1}"
}

error() {
  echo "${RED}✗${NORMAL} $1"
}

panic() {
  printf "\n\n\t%s\n\n" "${RED}$1${NORMAL}"
  exit 1
}

setVersion() {
  if [ -z "$1" ]; then
    panic "Cannot set version to nil"
  fi

  VERDACCIO_VERSION="$1"
  COMPOSE_FILE="docker-compose-${VERDACCIO_VERSION}.yaml"
}

isContainerRunning() {
  if [ -z $(docker-compose -f $COMPOSE_FILE ps -q $1) ] || [ -z $(docker ps -q --no-trunc | grep $(docker-compose -f $COMPOSE_FILE ps -q $1)) ]; then
    panic "$1 is not running."
  else
    success "$1 is running."
  fi
}

cleanup() {
  example
  docker-compose -f $COMPOSE_FILE logs $VERDACCIO_SERVICE >"$DIR/../example/out.verdaccio.${VERDACCIO_VERSION}.log"
  mc ls example/verdaccio >"$DIR/../example/out.minio.${VERDACCIO_VERSION}.log"
  mc config host rm example
  prune
  root
}

build() {
  title "Building plugin"
  {
    root
    yarn build
  } || {
    panic "Failed to build plugin"
  }
}

copy() {
  title "Copying build result to example folder"
  {
    root
    mkdir -p ./example/verdaccio-minio
    cp package.json ./example/verdaccio-minio
    cp yarn.lock ./example/verdaccio-minio
    cp -R lib ./example/verdaccio-minio
  } || {
    panic "Failed to copy plugin to example"
  }
}

prune() {
  title "Pruning docker containers & volumes for v${VERDACCIO_VERSION}"
  example
  docker-compose -f $COMPOSE_FILE rm -v --stop --force >/dev/null 2>&1
  docker volume rm example_minio >/dev/null 2>&1
}

start() {
  title "Starting containers for v${VERDACCIO_VERSION}"
  {
    example
    docker-compose -f $COMPOSE_FILE up -d --build
    sleep 1s
    isContainerRunning $MINIO_SERVICE
    isContainerRunning $VERDACCIO_SERVICE
  } || {
    panic "Failed to start the containers for v${VERDACCIO_VERSION}"
  }
}
